{"version":3,"sources":["Components/Navbar.js","Components/TextBox.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","TextBox","useState","text","setText","WordsCount","endsWith","split","length","Container","TextareaAutosize","id","value","onChange","event","target","minRows","placeholder","onClick","newText","toUpperCase","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","toLowerCase","text1","document","getElementById","select","navigator","clipboard","writeText","join","About","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d4c211ec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/about\">About</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import { React, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../App.css\";\r\nconst TextBox = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const ConvertUp = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    toast.success(\"Your Text is converted into UpperCase\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n  const Convertlow = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    toast.success(\"Your Text is converted into LowerCase\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n  const ChangeFun = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const HandleClear = () => {\r\n    setText(\"\");\r\n    toast.success(\"Text is Cleared\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n  const HandleCopy = () => {\r\n    let text1 = document.getElementById(\"myBox\");\r\n    text1.select();\r\n    navigator.clipboard.writeText(text1.value);\r\n    toast.success(\"Your Text is Copied\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n  const HandleRemove = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    toast.success(\"Extra space is Removed\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n  const WordsCount = () => {\r\n    if (text === \"\") {\r\n      return 0;\r\n    } else {\r\n      return text.endsWith(\" \") === true\r\n        ? text.split(\" \").length - 1\r\n        : text.split(\" \").length;\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <h2>Type Your Text here for Analyzing</h2>\r\n        <div className=\"box\">\r\n          <TextareaAutosize\r\n            id=\"myBox\"\r\n            value={text}\r\n            onChange={ChangeFun}\r\n            className=\"textbox\"\r\n            aria-label=\"minimum height\"\r\n            minRows={15}\r\n            placeholder=\"Enter your text here\"\r\n          />\r\n        </div>\r\n        <button className=\"btn1\" onClick={ConvertUp}>\r\n          Convert to UpperCase\r\n          <ToastContainer />\r\n        </button>\r\n        <button className=\"btn1\" onClick={Convertlow}>\r\n          Convert to LowerCase\r\n        </button>\r\n\r\n        <button className=\"btn1\" onClick={HandleClear}>\r\n          Clear Text\r\n        </button>\r\n\r\n        <button className=\"btn1\" onClick={HandleCopy}>\r\n          Copy Text\r\n        </button>\r\n\r\n        <button className=\"btn1\" onClick={HandleRemove}>\r\n          Remove extra Space\r\n        </button>\r\n\r\n        <div>\r\n          <h2>Your Text Summary</h2>\r\n          <p>\r\n            <b>{WordsCount()}</b> words and <b>{text.length}</b> characters\r\n          </p>\r\n          <p>{0.008 * WordsCount()} Minutes read</p>\r\n          <h2>Privew</h2>\r\n          {text.length > 0 ? text : \"Enter something to perview here\"}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default TextBox;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about\">\r\n            <p>Using this website you can analyze your text and perform some opertaion on your text like converting into uppercase and converting into Lowercase also you can remove some extra space from paragraph</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport TextBox from \"./Components/TextBox\";\nimport About from \"./Components/About\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n            <TextBox />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}